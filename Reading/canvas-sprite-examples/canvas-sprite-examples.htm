<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<!-- saved from url=(0095)http://codeutopia.net/blog/2009/08/21/using-canvas-to-do-bitmap-sprite-animation-in-javascript/ -->
<html xmlns="http://www.w3.org/1999/xhtml"><head profile="http://gmpg.org/xfn/11"><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

<title>Using canvas to do bitmap sprite animation in JavaScript | CodeUtopia - The blog of Jani Hartikainen</title>
<meta name="generator" content="WordPress 3.0"> <!-- leave this for stats -->
<link rel="stylesheet" href="./canvas-sprite-examples_files/style.css" type="text/css" media="screen">
<link rel="alternate" type="application/rss+xml" title="CodeUtopia – The blog of Jani Hartikainen RSS Feed" href="http://codeutopia.net/blog/feed/">
<link rel="pingback" href="http://codeutopia.net/blog/xmlrpc.php">
<link rel="alternate" type="application/rss+xml" title="CodeUtopia - The blog of Jani Hartikainen » Using canvas to do bitmap sprite animation in JavaScript Comments Feed" href="http://codeutopia.net/blog/2009/08/21/using-canvas-to-do-bitmap-sprite-animation-in-javascript/feed/">
<link rel="stylesheet" id="sociable-front-css-css" href="./canvas-sprite-examples_files/sociable.css" type="text/css" media="all">
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://codeutopia.net/blog/xmlrpc.php?rsd">
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://codeutopia.net/blog/wp-includes/wlwmanifest.xml"> 
<link rel="index" title="CodeUtopia – The blog of Jani Hartikainen" href="http://codeutopia.net/blog/">
<link rel="start" title="Different PHP template engines" href="http://codeutopia.net/blog/2007/11/05/different-php-template-engines/">
<link rel="prev" title="Unit-testing essentials" href="http://codeutopia.net/blog/2009/08/17/unit-testing-essentials/">
<link rel="next" title="Reader challenge: Keep track of code errors" href="http://codeutopia.net/blog/2009/08/24/reader-challenge-keep-track-of-code-errors/">
<meta name="generator" content="WordPress 3.0">
<link rel="canonical" href="./canvas-sprite-examples_files/canvas-sprite-examples.htm">
<link rel="shortlink" href="http://codeutopia.net/blog/?p=251">

<!-- All in One SEO Pack 1.6.8.1 by Michael Torbert of Semper Fi Web Design[276,419] -->
<meta name="description" content="Have you ever thought about writing a game? If you have, you&#39;ve probably wondered how to render animations for your game characters. In this post, I&#39;ll show you">
<!-- /all in one seo pack -->

<link rel="stylesheet" href="./canvas-sprite-examples_files/wp-syntax.css" type="text/css" media="screen">
	<style type="text/css">.recentcomments a{display:inline !important;padding:0 !important;margin:0 !important;}</style>
</head>
<body>
<div id="header">
<a href="http://codeutopia.net/blog/"><img src="./canvas-sprite-examples_files/cuhead.png" border="0" alt=""><h1>CodeUtopia</h1></a>
</div>
<div id="ddnav">
<div id="nav">
<ul class="nav">
<li><a href="http://codeutopia.net/blog">Home</a></li>
<li class="page_item page-item-2"><a href="http://codeutopia.net/blog/jani-hartikainen/">About</a></li>
<li class="page_item page-item-197"><a href="http://codeutopia.net/blog/articles/">Articles</a></li>
<li class="page_item page-item-48"><a href="http://codeutopia.net/blog/code/">Code</a></li>
<li class="page_item page-item-26"><a href="http://codeutopia.net/blog/contact/">Contact</a></li>
</ul>
</div>
</div>
<div id="top"></div>
<div id="main">
<div id="content"> 

			<div class="entry">
		<div class="post" id="post-251">
			<h1><a href="./canvas-sprite-examples_files/canvas-sprite-examples.htm" rel="bookmark" title="Permanent Link: Using canvas to do bitmap sprite animation in JavaScript">Using canvas to do bitmap sprite animation in JavaScript</a></h1>
<abbr title="2009-08-21T19:02:48+0000">August 21, 2009 – 7:02 pm</abbr> Tags: <a href="http://codeutopia.net/blog/tag/canvas/" rel="tag">canvas</a>, <a href="http://codeutopia.net/blog/tag/games/" rel="tag">Games</a>, <a href="http://codeutopia.net/blog/tag/javascript/" rel="tag">JavaScript</a><!-- by Jani Hartikainen -->
		
				<p>Have you ever thought about writing a game? If you have, you’ve probably wondered how to render animations for your game characters. In this post, I’ll show you how you can use JavaScript to do time-based sprite animations, drawing them on canvas – vital if you want to do a game. You can also apply the same techniques I’ll show in other languages, such as ActionScript.</p>
<p><span id="more-251"></span></p>
<h3>What is “time-based” animation?</h3>
<p>We all know what animation means, but what does time-based add? </p>
<p>Let’s imagine we have a game. Our game runs at 60 frames per second (fps) on a powerful PC, and 20 fps on a slow PC.</p>
<p>Animation that isn’t time-based is frame-based. In this case, a frame means a “cycle” in the game: In each frame you typically calculate things like movement or AI, and draw things on the screen.</p>
<p>Let’s say we have a walk animation which changes every frame. This means that on the fast PC the animation is much faster than on the slow PC, since the framerate is much higher.</p>
<p>Time-based animation calculates how long each frame in your game takes, and uses this to calculate how long an animation should take. By using time instead of frames, we can achieve exactly the same speed on both the fast and slow PCs.</p>
<p>There is also a term “time-based movement”. This applies the same principle to movement of characters and other things on the screen so that everything moves at the same speed no matter what frame rate.</p>
<h3>The infrastructure</h3>
<p>There is some infrastructure we need before we can actually start animating things.</p>
<ul>
<li>We need a timer which can calculate how long each frame takes</li>
<li>We need a sprite sheet object, which we can use to keep track of different sprites in a big bitmap</li>
<li>Lastly, we need an animation object which handles choosing the correct sprite from a spritesheet and such.</li>
</ul>
<p>In addition to these, in a game you would also have things like animation and spritesheet loaders that load spritesheet and animation definitions from files so you won’t have to modify your code to change an animation. However, these are outside the scope of this post – if you’d like to see a post about loading this kind of things from files, leave a comment.</p>
<p>First, let’s look at making the class which will take care of timing the frames.</p>
<h3>Creating a frame timer</h3>
<p>The basic idea of a frame timer is that it should be called once every frame, usually after the processing is complete. At that point, it compares how much time has passed since the previous call. We can then use this value on the next frame to make a good guess of how long it’ll take this time.</p>
<p>To determine the time on each frame, we’ll use the Date object.</p>

<div class="wp_syntax"><div class="code"><pre class="javascript" style="font-family:monospace;"><span style="color: #003366; font-weight: bold;">var</span> FrameTimer <span style="color: #339933;">=</span> <span style="color: #003366; font-weight: bold;">function</span><span style="color: #009900;">(</span><span style="color: #009900;">)</span> <span style="color: #009900;">{</span>
    <span style="color: #000066; font-weight: bold;">this</span>._lastTick <span style="color: #339933;">=</span> <span style="color: #009900;">(</span><span style="color: #003366; font-weight: bold;">new</span> Date<span style="color: #009900;">(</span><span style="color: #009900;">)</span><span style="color: #009900;">)</span>.<span style="color: #660066;">getTime</span><span style="color: #009900;">(</span><span style="color: #009900;">)</span><span style="color: #339933;">;</span>
<span style="color: #009900;">}</span><span style="color: #339933;">;</span>
&nbsp;
FrameTimer.<span style="color: #660066;">prototype</span> <span style="color: #339933;">=</span> <span style="color: #009900;">{</span>
    getSeconds<span style="color: #339933;">:</span> <span style="color: #003366; font-weight: bold;">function</span><span style="color: #009900;">(</span><span style="color: #009900;">)</span> <span style="color: #009900;">{</span>
        <span style="color: #003366; font-weight: bold;">var</span> seconds <span style="color: #339933;">=</span> <span style="color: #000066; font-weight: bold;">this</span>._frameSpacing <span style="color: #339933;">/</span> <span style="color: #CC0000;">1000</span><span style="color: #339933;">;</span>
        <span style="color: #000066; font-weight: bold;">if</span><span style="color: #009900;">(</span>isNaN<span style="color: #009900;">(</span>seconds<span style="color: #009900;">)</span><span style="color: #009900;">)</span> <span style="color: #009900;">{</span>
            <span style="color: #000066; font-weight: bold;">return</span> <span style="color: #CC0000;">0</span><span style="color: #339933;">;</span>
        <span style="color: #009900;">}</span>
&nbsp;
        <span style="color: #000066; font-weight: bold;">return</span> seconds<span style="color: #339933;">;</span>
    <span style="color: #009900;">}</span><span style="color: #339933;">,</span>
&nbsp;
    tick<span style="color: #339933;">:</span> <span style="color: #003366; font-weight: bold;">function</span><span style="color: #009900;">(</span><span style="color: #009900;">)</span> <span style="color: #009900;">{</span>
        <span style="color: #003366; font-weight: bold;">var</span> currentTick <span style="color: #339933;">=</span> <span style="color: #009900;">(</span><span style="color: #003366; font-weight: bold;">new</span> Date<span style="color: #009900;">(</span><span style="color: #009900;">)</span><span style="color: #009900;">)</span>.<span style="color: #660066;">getTime</span><span style="color: #009900;">(</span><span style="color: #009900;">)</span><span style="color: #339933;">;</span>
        <span style="color: #000066; font-weight: bold;">this</span>._frameSpacing <span style="color: #339933;">=</span> currentTick <span style="color: #339933;">-</span> <span style="color: #000066; font-weight: bold;">this</span>._lastTick<span style="color: #339933;">;</span>
        <span style="color: #000066; font-weight: bold;">this</span>._lastTick <span style="color: #339933;">=</span> currentTick<span style="color: #339933;">;</span>
    <span style="color: #009900;">}</span>
<span style="color: #009900;">}</span><span style="color: #339933;">;</span></pre></div></div>

<p>This simple looking class simply tracks time spent during two “ticks”. With this we track the actual time spent between two frames, so that we can keep the animation’s speed constant in real time instead of application speed.</p>
<p>Using this object is simple:</p>

<div class="wp_syntax"><div class="code"><pre class="javascript" style="font-family:monospace;"><span style="color: #003366; font-weight: bold;">var</span> timer <span style="color: #339933;">=</span> <span style="color: #003366; font-weight: bold;">new</span> FrameTimer<span style="color: #009900;">(</span><span style="color: #009900;">)</span><span style="color: #339933;">;</span>
<span style="color: #006600; font-style: italic;">//Tick once to initialize the time</span>
timer.<span style="color: #660066;">tick</span><span style="color: #009900;">(</span><span style="color: #009900;">)</span><span style="color: #339933;">;</span>
&nbsp;
<span style="color: #006600; font-style: italic;">//Now do processing</span>
<span style="color: #000066; font-weight: bold;">while</span><span style="color: #009900;">(</span><span style="color: #003366; font-weight: bold;">true</span><span style="color: #009900;">)</span> <span style="color: #009900;">{</span>
  <span style="color: #006600; font-style: italic;">//do things based on time</span>
  work<span style="color: #009900;">(</span>timer.<span style="color: #660066;">getSeconds</span><span style="color: #009900;">(</span><span style="color: #009900;">)</span><span style="color: #009900;">)</span><span style="color: #339933;">;</span>
&nbsp;
  timer.<span style="color: #660066;">tick</span><span style="color: #009900;">(</span><span style="color: #009900;">)</span><span style="color: #339933;">;</span>
<span style="color: #009900;">}</span></pre></div></div>

<h3>Sprite sheet and animation objects</h3>
<p>To make our life a bit easier in the code, let’s abstract the code which calculates the exact location of a specific sprite on a spritesheet. Let’s also write a class which abstracts the animation and handling which frame should be displayed.</p>
<p>Since we’ll need the spritesheet class for the animation class, let’s look at that one first.</p>
<p>The idea is that we can create a spritesheet object that helps us in drawing sprites from a big sheet. As you know, to draw a specific sprite from a sheet, we need to know the location of it on the sheet – locating a specific sprite will be the main job of the spritesheet object, so that we won’t have to think of it all the time.</p>

<div class="wp_syntax"><div class="code"><pre class="javascript" style="font-family:monospace;"><span style="color: #003366; font-weight: bold;">var</span> SpriteSheet <span style="color: #339933;">=</span> <span style="color: #003366; font-weight: bold;">function</span><span style="color: #009900;">(</span>data<span style="color: #009900;">)</span> <span style="color: #009900;">{</span>
    <span style="color: #000066; font-weight: bold;">this</span>.<span style="color: #660066;">load</span><span style="color: #009900;">(</span>data<span style="color: #009900;">)</span><span style="color: #339933;">;</span>
<span style="color: #009900;">}</span><span style="color: #339933;">;</span>
&nbsp;
SpriteSheet.<span style="color: #660066;">prototype</span> <span style="color: #339933;">=</span> <span style="color: #009900;">{</span>
    _sprites<span style="color: #339933;">:</span> <span style="color: #009900;">[</span><span style="color: #009900;">]</span><span style="color: #339933;">,</span>
    _width<span style="color: #339933;">:</span> <span style="color: #CC0000;">0</span><span style="color: #339933;">,</span>
    _height<span style="color: #339933;">:</span> <span style="color: #CC0000;">0</span><span style="color: #339933;">,</span>
&nbsp;
    load<span style="color: #339933;">:</span> <span style="color: #003366; font-weight: bold;">function</span><span style="color: #009900;">(</span>data<span style="color: #009900;">)</span> <span style="color: #009900;">{</span>
        <span style="color: #000066; font-weight: bold;">this</span>._height <span style="color: #339933;">=</span> data.<span style="color: #660066;">height</span><span style="color: #339933;">;</span>
        <span style="color: #000066; font-weight: bold;">this</span>._width <span style="color: #339933;">=</span> data.<span style="color: #660066;">width</span><span style="color: #339933;">;</span>
        <span style="color: #000066; font-weight: bold;">this</span>._sprites <span style="color: #339933;">=</span> data.<span style="color: #660066;">sprites</span><span style="color: #339933;">;</span>
    <span style="color: #009900;">}</span><span style="color: #339933;">,</span>
&nbsp;
    getOffset<span style="color: #339933;">:</span> <span style="color: #003366; font-weight: bold;">function</span><span style="color: #009900;">(</span>spriteName<span style="color: #009900;">)</span> <span style="color: #009900;">{</span>
        <span style="color: #006600; font-style: italic;">//Go through all sprites to find the required one</span>
        <span style="color: #000066; font-weight: bold;">for</span><span style="color: #009900;">(</span><span style="color: #003366; font-weight: bold;">var</span> i <span style="color: #339933;">=</span> <span style="color: #CC0000;">0</span><span style="color: #339933;">,</span> len <span style="color: #339933;">=</span> <span style="color: #000066; font-weight: bold;">this</span>._sprites.<span style="color: #660066;">length</span><span style="color: #339933;">;</span> i <span style="color: #339933;">&lt;</span> len<span style="color: #339933;">;</span> i<span style="color: #339933;">++</span><span style="color: #009900;">)</span> <span style="color: #009900;">{</span>
            <span style="color: #003366; font-weight: bold;">var</span> sprite <span style="color: #339933;">=</span> <span style="color: #000066; font-weight: bold;">this</span>._sprites<span style="color: #009900;">[</span>i<span style="color: #009900;">]</span><span style="color: #339933;">;</span>
&nbsp;
            <span style="color: #000066; font-weight: bold;">if</span><span style="color: #009900;">(</span>sprite.<span style="color: #000066;">name</span> <span style="color: #339933;">==</span> spriteName<span style="color: #009900;">)</span> <span style="color: #009900;">{</span>
                <span style="color: #006600; font-style: italic;">//To get the offset, multiply by sprite width</span>
                <span style="color: #006600; font-style: italic;">//Sprite-specific x and y offset is then added into it.</span>
                <span style="color: #000066; font-weight: bold;">return</span> <span style="color: #009900;">{</span>
                    x<span style="color: #339933;">:</span> <span style="color: #009900;">(</span>i <span style="color: #339933;">*</span> <span style="color: #000066; font-weight: bold;">this</span>._width<span style="color: #009900;">)</span> <span style="color: #339933;">+</span> <span style="color: #009900;">(</span>sprite.<span style="color: #660066;">x</span><span style="color: #339933;">||</span><span style="color: #CC0000;">0</span><span style="color: #009900;">)</span><span style="color: #339933;">,</span>
                    y<span style="color: #339933;">:</span> <span style="color: #009900;">(</span>sprite.<span style="color: #660066;">y</span><span style="color: #339933;">||</span><span style="color: #CC0000;">0</span><span style="color: #009900;">)</span><span style="color: #339933;">,</span>
                    width<span style="color: #339933;">:</span> <span style="color: #000066; font-weight: bold;">this</span>._width<span style="color: #339933;">,</span>
                    height<span style="color: #339933;">:</span> <span style="color: #000066; font-weight: bold;">this</span>._height
                <span style="color: #009900;">}</span><span style="color: #339933;">;</span>
            <span style="color: #009900;">}</span>
        <span style="color: #009900;">}</span>
&nbsp;
        <span style="color: #000066; font-weight: bold;">return</span> <span style="color: #003366; font-weight: bold;">null</span><span style="color: #339933;">;</span>
    <span style="color: #009900;">}</span>
<span style="color: #009900;">}</span><span style="color: #339933;">;</span></pre></div></div>

<p>The basic usage of this class is you create a data-structure which contains the spritesheet definition, and pass it to the object, such as this:</p>

<div class="wp_syntax"><div class="code"><pre class="javascript" style="font-family:monospace;"><span style="color: #003366; font-weight: bold;">var</span> sprites <span style="color: #339933;">=</span> <span style="color: #003366; font-weight: bold;">new</span> SpriteSheet<span style="color: #009900;">(</span><span style="color: #009900;">{</span>
    width<span style="color: #339933;">:</span> <span style="color: #CC0000;">32</span><span style="color: #339933;">,</span>
    height<span style="color: #339933;">:</span> <span style="color: #CC0000;">32</span><span style="color: #339933;">,</span>
    sprites<span style="color: #339933;">:</span> <span style="color: #009900;">[</span>
        <span style="color: #009900;">{</span> <span style="color: #000066;">name</span><span style="color: #339933;">:</span> <span style="color: #3366CC;">'stand'</span> <span style="color: #009900;">}</span><span style="color: #339933;">,</span>
        <span style="color: #009900;">{</span> <span style="color: #000066;">name</span><span style="color: #339933;">:</span> <span style="color: #3366CC;">'walk_1'</span><span style="color: #339933;">,</span> x<span style="color: #339933;">:</span> <span style="color: #CC0000;">0</span><span style="color: #339933;">,</span> y<span style="color: #339933;">:</span> <span style="color: #CC0000;">1</span> <span style="color: #009900;">}</span><span style="color: #339933;">,</span>
        <span style="color: #009900;">{</span> <span style="color: #000066;">name</span><span style="color: #339933;">:</span> <span style="color: #3366CC;">'walk_2'</span><span style="color: #339933;">,</span> x<span style="color: #339933;">:</span> <span style="color: #CC0000;">0</span><span style="color: #339933;">,</span> y<span style="color: #339933;">:</span> <span style="color: #CC0000;">1</span> <span style="color: #009900;">}</span><span style="color: #339933;">,</span>
    <span style="color: #009900;">]</span>
<span style="color: #009900;">}</span><span style="color: #009900;">)</span><span style="color: #339933;">;</span></pre></div></div>

<p>The definition is simple: First, we define the width and height of a sprite, and then we define a name and x/y offsets for each sprite in the sheet.</p>
<p>When we apply this with an image which has three sprites, each 32×32 in size, we can simply tell the spritesheet that we want the sprite called ‘walk_1′, and we get a nice object with the X and Y positions to draw it from the sheet. We’ll see this in action soon!</p>
<h3>The animation class</h3>
<p>Now that we have the spritesheet stuff done, we can do the last in the line: The animation class.</p>
<p>The animation class takes a definition, similar to how the spritesheet took, and then handles various things based on that. For example, as each animation comprises of specific frames, it calculates how long a frame has been visible, and changes to the next frame when it has been visible long enough.</p>
<p>On with the code:</p>

<div class="wp_syntax"><div class="code"><pre class="javascript" style="font-family:monospace;"><span style="color: #003366; font-weight: bold;">var</span> Animation <span style="color: #339933;">=</span> <span style="color: #003366; font-weight: bold;">function</span><span style="color: #009900;">(</span>data<span style="color: #339933;">,</span> sprites<span style="color: #009900;">)</span> <span style="color: #009900;">{</span>
    <span style="color: #000066; font-weight: bold;">this</span>.<span style="color: #660066;">load</span><span style="color: #009900;">(</span>data<span style="color: #009900;">)</span><span style="color: #339933;">;</span>
    <span style="color: #000066; font-weight: bold;">this</span>._sprites <span style="color: #339933;">=</span> sprites<span style="color: #339933;">;</span>
<span style="color: #009900;">}</span><span style="color: #339933;">;</span>
&nbsp;
Animation.<span style="color: #660066;">prototype</span> <span style="color: #339933;">=</span> <span style="color: #009900;">{</span>
    _frames<span style="color: #339933;">:</span> <span style="color: #009900;">[</span><span style="color: #009900;">]</span><span style="color: #339933;">,</span>
    _frame<span style="color: #339933;">:</span> <span style="color: #003366; font-weight: bold;">null</span><span style="color: #339933;">,</span>
    _frameDuration<span style="color: #339933;">:</span> <span style="color: #CC0000;">0</span><span style="color: #339933;">,</span>
&nbsp;
    load<span style="color: #339933;">:</span> <span style="color: #003366; font-weight: bold;">function</span><span style="color: #009900;">(</span>data<span style="color: #009900;">)</span> <span style="color: #009900;">{</span>
        <span style="color: #000066; font-weight: bold;">this</span>._frames <span style="color: #339933;">=</span> data<span style="color: #339933;">;</span>
&nbsp;
        <span style="color: #006600; font-style: italic;">//Initialize the first frame</span>
        <span style="color: #000066; font-weight: bold;">this</span>._frameIndex <span style="color: #339933;">=</span> <span style="color: #CC0000;">0</span><span style="color: #339933;">;</span>
        <span style="color: #000066; font-weight: bold;">this</span>._frameDuration <span style="color: #339933;">=</span> data<span style="color: #009900;">[</span><span style="color: #CC0000;">0</span><span style="color: #009900;">]</span>.<span style="color: #660066;">time</span><span style="color: #339933;">;</span>
    <span style="color: #009900;">}</span><span style="color: #339933;">,</span>
&nbsp;
    animate<span style="color: #339933;">:</span> <span style="color: #003366; font-weight: bold;">function</span><span style="color: #009900;">(</span>deltaTime<span style="color: #009900;">)</span> <span style="color: #009900;">{</span>
        <span style="color: #006600; font-style: italic;">//Reduce time passed from the duration to show a frame        </span>
        <span style="color: #000066; font-weight: bold;">this</span>._frameDuration <span style="color: #339933;">-=</span> deltaTime<span style="color: #339933;">;</span>
&nbsp;
        <span style="color: #006600; font-style: italic;">//When the display duration has passed</span>
        <span style="color: #000066; font-weight: bold;">if</span><span style="color: #009900;">(</span><span style="color: #000066; font-weight: bold;">this</span>._frameDuration <span style="color: #339933;">&lt;=</span> <span style="color: #CC0000;">0</span><span style="color: #009900;">)</span> <span style="color: #009900;">{</span>
            <span style="color: #006600; font-style: italic;">//Change to next frame, or the first if ran out of frames</span>
            <span style="color: #000066; font-weight: bold;">this</span>._frameIndex<span style="color: #339933;">++;</span>
            <span style="color: #000066; font-weight: bold;">if</span><span style="color: #009900;">(</span><span style="color: #000066; font-weight: bold;">this</span>._frameIndex <span style="color: #339933;">==</span> <span style="color: #000066; font-weight: bold;">this</span>._frames.<span style="color: #660066;">length</span><span style="color: #009900;">)</span> <span style="color: #009900;">{</span>
                <span style="color: #000066; font-weight: bold;">this</span>._frameIndex <span style="color: #339933;">=</span> <span style="color: #CC0000;">0</span><span style="color: #339933;">;</span>
            <span style="color: #009900;">}</span>
&nbsp;
            <span style="color: #006600; font-style: italic;">//Change duration to duration of new frame</span>
            <span style="color: #000066; font-weight: bold;">this</span>._frameDuration <span style="color: #339933;">=</span> <span style="color: #000066; font-weight: bold;">this</span>._frames<span style="color: #009900;">[</span><span style="color: #000066; font-weight: bold;">this</span>._frameIndex<span style="color: #009900;">]</span>.<span style="color: #660066;">time</span><span style="color: #339933;">;</span>
        <span style="color: #009900;">}</span>
    <span style="color: #009900;">}</span><span style="color: #339933;">,</span>
&nbsp;
    getSprite<span style="color: #339933;">:</span> <span style="color: #003366; font-weight: bold;">function</span><span style="color: #009900;">(</span><span style="color: #009900;">)</span> <span style="color: #009900;">{</span>
        <span style="color: #006600; font-style: italic;">//Return the sprite for the current frame</span>
        <span style="color: #000066; font-weight: bold;">return</span> <span style="color: #000066; font-weight: bold;">this</span>._sprites.<span style="color: #660066;">getOffset</span><span style="color: #009900;">(</span><span style="color: #000066; font-weight: bold;">this</span>._frames<span style="color: #009900;">[</span><span style="color: #000066; font-weight: bold;">this</span>._frameIndex<span style="color: #009900;">]</span>.<span style="color: #660066;">sprite</span><span style="color: #009900;">)</span><span style="color: #339933;">;</span>
    <span style="color: #009900;">}</span>
<span style="color: #009900;">}</span></pre></div></div>

<p>The comments should explain most of this class. The main point is that with this, we are done!</p>
<p>Now we only need to look at the animation definition format, and then we can combine these three into the most amazing animation machine the internet has ever seen… or something like that anyway.</p>

<div class="wp_syntax"><div class="code"><pre class="javascript" style="font-family:monospace;"><span style="color: #003366; font-weight: bold;">var</span> walk <span style="color: #339933;">=</span> <span style="color: #003366; font-weight: bold;">new</span> Animation<span style="color: #009900;">(</span><span style="color: #009900;">[</span>
    <span style="color: #009900;">{</span> sprite<span style="color: #339933;">:</span> <span style="color: #3366CC;">'walk_1'</span><span style="color: #339933;">,</span> time<span style="color: #339933;">:</span> <span style="color: #CC0000;">0.2</span> <span style="color: #009900;">}</span><span style="color: #339933;">,</span>
    <span style="color: #009900;">{</span> sprite<span style="color: #339933;">:</span> <span style="color: #3366CC;">'stand'</span><span style="color: #339933;">,</span> time<span style="color: #339933;">:</span> <span style="color: #CC0000;">0.2</span> <span style="color: #009900;">}</span><span style="color: #339933;">,</span>
    <span style="color: #009900;">{</span> sprite<span style="color: #339933;">:</span> <span style="color: #3366CC;">'walk_2'</span><span style="color: #339933;">,</span> time<span style="color: #339933;">:</span> <span style="color: #CC0000;">0.2</span> <span style="color: #009900;">}</span><span style="color: #339933;">,</span>
    <span style="color: #009900;">{</span> sprite<span style="color: #339933;">:</span> <span style="color: #3366CC;">'stand'</span><span style="color: #339933;">,</span> time<span style="color: #339933;">:</span> <span style="color: #CC0000;">0.2</span> <span style="color: #009900;">}</span>
<span style="color: #009900;">]</span><span style="color: #339933;">,</span> sprites<span style="color: #009900;">)</span><span style="color: #339933;">;</span></pre></div></div>

<p>Here we define a walk animation. The animation is defined by simply giving the object an array, which contains objects for each frame, defining the name of the sprite and the duration of the frame. The variable sprites in the end is the spritesheet we defined in the previous example. </p>
<h3>Putting it all together</h3>
<p>Now, let’s put all this together!</p>
<p>I have a spritesheet lying around from some old projects: <a href="http://codeutopia.net/blog-files/canvas-animation/img/kunio.gif">kunio.gif</a>. Let’s animate this.</p>
<p>You may be familiar with this character – He is Kunio from an old NES game known as Downtown Nekketsu Monogatari, released in english as <a href="http://en.wikipedia.org/wiki/River_City_Ransom">River City Ransom</a>, and he’s been featured on various flash-animations as well.</p>
<p>I’ve used this sprite in a few other projects:</p>
<ul>
<li><a href="http://codeutopia.net/projects/flex/main.swf">In this Flex-based game test</a> (use arrow keys to move, space to punch, doubletap arrows to run)</li>
<li><a href="http://www.youtube.com/watch?v=c2HpcwnM9wI">In my Palm Pre Accelerometer demo application</a>, which actually uses this same code shown here.</li>
</ul>
<p>But enough of that, let’s write a quick HTML page to put our code to work:</p>

<div class="wp_syntax"><div class="code"><pre class="html" style="font-family:monospace;">&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
    &lt;title&gt;Canvas Spritesheet Animation&lt;/title&gt;
    &lt;script type="text/javascript" src="js/FrameTimer.js"&gt;&lt;/script&gt;
    &lt;script type="text/javascript" src="js/SpriteSheet.js"&gt;&lt;/script&gt;
    &lt;script type="text/javascript" src="js/Animation.js"&gt;&lt;/script&gt;
    &lt;script type="text/javascript"&gt;
        window.onload = function() {
            var timer = new FrameTimer();
            timer.tick();
&nbsp;
            var sprites = new SpriteSheet({
                width: 32,
                height: 32,
                sprites: [
                    { name: 'stand' },
                    { name: 'walk_1', x: 0, y: 1 },
                    { name: 'walk_2', x: 0, y: 1 },
                ]
            });
            var ctx = document.getElementById('canvas').getContext('2d');
            var walk = new Animation([
                    { sprite: 'walk_1', time: 0.2 },
                    { sprite: 'stand', time: 0.2 },
                    { sprite: 'walk_2', time: 0.2 },
                    { sprite: 'stand', time: 0.2 }
            ], sprites);
            var kunioImage = new Image();
&nbsp;
            kunioImage.onload = function() {
                setInterval(function(){
                    walk.animate(timer.getSeconds());
                    var frame = walk.getSprite();
                    ctx.clearRect(0, 0, 300, 300);
                    ctx.drawImage(kunioImage, frame.x, frame.y, 32, 32, 0, 0, 32, 32);
                    timer.tick();
                }, 5);
            };
&nbsp;
            kunioImage.src = 'img/kunio.gif';
        };
    &lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;h1&gt;Canvas sprite animation demo&lt;/h1&gt;
&lt;canvas id="canvas" width="300" height="300"&gt;&lt;/canvas&gt;
&lt;/body&gt;
&lt;/html&gt;</pre></div></div>

<p>Here it is. Our great animation system!</p>
<h3>A live example and source code</h3>
<p>You can see this code in action <a href="http://codeutopia.net/blog-files/canvas-animation/">by clicking here</a></p>
<p>As usual, don’t expect it to work in Internet Explorer. It has been tested to work in Opera 10 and Firefox 3, probably works in other canvas-supporting browsers as well.</p>
<p>Source:</p>
<ul>
<li><a href="http://codeutopia.net/blog-files/canvas-animation/js/FrameTimer.js">FrameTimer</a></li>
<li><a href="http://codeutopia.net/blog-files/canvas-animation/js/SpriteSheet.js">SpriteSheet</a></li>
<li><a href="http://codeutopia.net/blog-files/canvas-animation/js/Animation.js">Animation</a></li>
</ul>
<h3>Conclusion</h3>
<p>Animating a spritesheet with canvas is quite simple. This is why JavaScript is quickly becoming a powerful platform for small games in my opinion – very easy to use, and quite ubiquitous.</p>
<p>You can use this same approach to animation in other languages too – For example, the Flex example I linked uses a very similar approach.</p>

<div class="sociable">
<div class="sociable_tagline">
<strong>Share this:</strong>
</div>
<ul>
	<li class="sociablefirst"><a rel="nofollow" href="http://digg.com/submit?phase=2&url=http%3A%2F%2Fcodeutopia.net%2Fblog%2F2009%2F08%2F21%2Fusing-canvas-to-do-bitmap-sprite-animation-in-javascript%2F&title=Using%20canvas%20to%20do%20bitmap%20sprite%20animation%20in%20JavaScript&bodytext=Have%20you%20ever%20thought%20about%20writing%20a%20game%3F%20If%20you%20have%2C%20you%27ve%20probably%20wondered%20how%20to%20render%20animations%20for%20your%20game%20characters.%20In%20this%20post%2C%20I%27ll%20show%20you%20how%20you%20can%20use%20JavaScript%20to%20do%20time-based%20sprite%20animations%2C%20drawing%20them%20on%20canvas%20-%20v" title="Digg"><img src="./canvas-sprite-examples_files/services-sprite.gif" title="Digg" alt="Digg" style="width: 16px; height: 16px; background: transparent url(http://codeutopia.net/blog/wp-content/plugins/sociable/images/services-sprite.png) no-repeat; background-position:-235px -1px" class="sociable-hovers"></a></li>
	<li><a rel="nofollow" href="http://delicious.com/post?url=http%3A%2F%2Fcodeutopia.net%2Fblog%2F2009%2F08%2F21%2Fusing-canvas-to-do-bitmap-sprite-animation-in-javascript%2F&title=Using%20canvas%20to%20do%20bitmap%20sprite%20animation%20in%20JavaScript&notes=Have%20you%20ever%20thought%20about%20writing%20a%20game%3F%20If%20you%20have%2C%20you%27ve%20probably%20wondered%20how%20to%20render%20animations%20for%20your%20game%20characters.%20In%20this%20post%2C%20I%27ll%20show%20you%20how%20you%20can%20use%20JavaScript%20to%20do%20time-based%20sprite%20animations%2C%20drawing%20them%20on%20canvas%20-%20v" title="del.icio.us"><img src="./canvas-sprite-examples_files/services-sprite.gif" title="del.icio.us" alt="del.icio.us" style="width: 16px; height: 16px; background: transparent url(http://codeutopia.net/blog/wp-content/plugins/sociable/images/services-sprite.png) no-repeat; background-position:-199px -1px" class="sociable-hovers"></a></li>
	<li><a rel="nofollow" href="http://www.facebook.com/share.php?u=http%3A%2F%2Fcodeutopia.net%2Fblog%2F2009%2F08%2F21%2Fusing-canvas-to-do-bitmap-sprite-animation-in-javascript%2F&t=Using%20canvas%20to%20do%20bitmap%20sprite%20animation%20in%20JavaScript" title="Facebook"><img src="./canvas-sprite-examples_files/services-sprite.gif" title="Facebook" alt="Facebook" style="width: 16px; height: 16px; background: transparent url(http://codeutopia.net/blog/wp-content/plugins/sociable/images/services-sprite.png) no-repeat; background-position:-343px -1px" class="sociable-hovers"></a></li>
	<li><a rel="nofollow" href="http://www.google.com/bookmarks/mark?op=edit&bkmk=http%3A%2F%2Fcodeutopia.net%2Fblog%2F2009%2F08%2F21%2Fusing-canvas-to-do-bitmap-sprite-animation-in-javascript%2F&title=Using%20canvas%20to%20do%20bitmap%20sprite%20animation%20in%20JavaScript&annotation=Have%20you%20ever%20thought%20about%20writing%20a%20game%3F%20If%20you%20have%2C%20you%27ve%20probably%20wondered%20how%20to%20render%20animations%20for%20your%20game%20characters.%20In%20this%20post%2C%20I%27ll%20show%20you%20how%20you%20can%20use%20JavaScript%20to%20do%20time-based%20sprite%20animations%2C%20drawing%20them%20on%20canvas%20-%20v" title="Google Bookmarks"><img src="./canvas-sprite-examples_files/services-sprite.gif" title="Google Bookmarks" alt="Google Bookmarks" style="width: 16px; height: 16px; background: transparent url(http://codeutopia.net/blog/wp-content/plugins/sociable/images/services-sprite.png) no-repeat; background-position:-91px -19px" class="sociable-hovers"></a></li>
	<li><a rel="nofollow" href="http://www.dzone.com/links/add.html?url=http%3A%2F%2Fcodeutopia.net%2Fblog%2F2009%2F08%2F21%2Fusing-canvas-to-do-bitmap-sprite-animation-in-javascript%2F&title=Using%20canvas%20to%20do%20bitmap%20sprite%20animation%20in%20JavaScript" title="DZone"><img src="./canvas-sprite-examples_files/services-sprite.gif" title="DZone" alt="DZone" style="width: 16px; height: 16px; background: transparent url(http://codeutopia.net/blog/wp-content/plugins/sociable/images/services-sprite.png) no-repeat; background-position:-289px -1px" class="sociable-hovers"></a></li>
	<li><a rel="nofollow" href="mailto:?subject=Using%20canvas%20to%20do%20bitmap%20sprite%20animation%20in%20JavaScript&body=http%3A%2F%2Fcodeutopia.net%2Fblog%2F2009%2F08%2F21%2Fusing-canvas-to-do-bitmap-sprite-animation-in-javascript%2F" title="email"><img src="./canvas-sprite-examples_files/services-sprite.gif" title="email" alt="email" style="width: 16px; height: 16px; background: transparent url(http://codeutopia.net/blog/wp-content/plugins/sociable/images/services-sprite.png) no-repeat; background-position:-325px -1px" class="sociable-hovers"></a></li>
	<li><a rel="nofollow" href="http://www.linkedin.com/shareArticle?mini=true&url=http%3A%2F%2Fcodeutopia.net%2Fblog%2F2009%2F08%2F21%2Fusing-canvas-to-do-bitmap-sprite-animation-in-javascript%2F&title=Using%20canvas%20to%20do%20bitmap%20sprite%20animation%20in%20JavaScript&source=CodeUtopia+-+The+blog+of+Jani+Hartikainen+Software+development+with+a+focus+on+web-related+technologies&summary=Have%20you%20ever%20thought%20about%20writing%20a%20game%3F%20If%20you%20have%2C%20you%27ve%20probably%20wondered%20how%20to%20render%20animations%20for%20your%20game%20characters.%20In%20this%20post%2C%20I%27ll%20show%20you%20how%20you%20can%20use%20JavaScript%20to%20do%20time-based%20sprite%20animations%2C%20drawing%20them%20on%20canvas%20-%20v" title="LinkedIn"><img src="./canvas-sprite-examples_files/services-sprite.gif" title="LinkedIn" alt="LinkedIn" style="width: 16px; height: 16px; background: transparent url(http://codeutopia.net/blog/wp-content/plugins/sociable/images/services-sprite.png) no-repeat; background-position:-1px -37px" class="sociable-hovers"></a></li>
	<li><a rel="nofollow" href="" title="Pownce"><img src="./canvas-sprite-examples_files/saved_resource" title="Pownce" alt="Pownce" class="sociable-hovers"></a></li>
	<li><a rel="nofollow" href="http://reddit.com/submit?url=http%3A%2F%2Fcodeutopia.net%2Fblog%2F2009%2F08%2F21%2Fusing-canvas-to-do-bitmap-sprite-animation-in-javascript%2F&title=Using%20canvas%20to%20do%20bitmap%20sprite%20animation%20in%20JavaScript" title="Reddit"><img src="./canvas-sprite-examples_files/services-sprite.gif" title="Reddit" alt="Reddit" style="width: 16px; height: 16px; background: transparent url(http://codeutopia.net/blog/wp-content/plugins/sociable/images/services-sprite.png) no-repeat; background-position:-55px -55px" class="sociable-hovers"></a></li>
	<li><a rel="nofollow" href="http://www.stumbleupon.com/submit?url=http%3A%2F%2Fcodeutopia.net%2Fblog%2F2009%2F08%2F21%2Fusing-canvas-to-do-bitmap-sprite-animation-in-javascript%2F&title=Using%20canvas%20to%20do%20bitmap%20sprite%20animation%20in%20JavaScript" title="StumbleUpon"><img src="./canvas-sprite-examples_files/services-sprite.gif" title="StumbleUpon" alt="StumbleUpon" style="width: 16px; height: 16px; background: transparent url(http://codeutopia.net/blog/wp-content/plugins/sociable/images/services-sprite.png) no-repeat; background-position:-217px -55px" class="sociable-hovers"></a></li>
	<li class="sociablelast"><a rel="nofollow" href="http://technorati.com/faves?add=http%3A%2F%2Fcodeutopia.net%2Fblog%2F2009%2F08%2F21%2Fusing-canvas-to-do-bitmap-sprite-animation-in-javascript%2F" title="Technorati"><img src="./canvas-sprite-examples_files/services-sprite.gif" title="Technorati" alt="Technorati" style="width: 16px; height: 16px; background: transparent url(http://codeutopia.net/blog/wp-content/plugins/sociable/images/services-sprite.png) no-repeat; background-position:-271px -55px" class="sociable-hovers"></a></li>
</ul>
</div>

				

<p><strong><a href="http://codeutopia.net/blog/feed/" title="Subscribe (RSS)"><img style="vertical-align: middle" src="./canvas-sprite-examples_files/feed-icon16x16.png" alt="RSS feed" border="0"> Subscribe to my RSS feed</a></strong></p>
			</div>
		</div>

<div class="entry">
	
<!-- You can start editing here. -->

<div class="boxcomments">




	<ol class="commentlist">

	<li class="commenthead"><h2 id="comments">12 Responses to “Using canvas to do bitmap sprite animation in JavaScript”</h2></li>
	
			
<li class="odd" id="comment-41232">

		        <p>Great tutorial Jani!<br>
Ya right now for flash I just use a moveclip that holds animations in each frame but if I ever try flex I’ll use the timer method <img src="./canvas-sprite-examples_files/icon_smile.gif" alt=":)" class="wp-smiley"> </p>
        <p style="margin-bottom:5px;">By <strong><a href="http://codejustin.com/" rel="external nofollow" class="url">CodeJustin</a></strong> on <a href="http://codeutopia.net/blog/2009/08/21/using-canvas-to-do-bitmap-sprite-animation-in-javascript/#comment-41232" title="">Aug 22, 2009</a> </p>
	</li>
		
		
			
<li class="odd" id="comment-41278">

		        <p>You might want to take a look at the tricky behavior of Firefox and Safari when they render an animated GIF through canvas (<a href="http://ernestdelgado.com/public-tests/gifoncanvas/" rel="nofollow">http://ernestdelgado.com/public-tests/gifoncanvas/</a>)<br>
and see if your technique could take any advantage of that behavior.</p>
        <p style="margin-bottom:5px;">By <strong><a href="http://ernestdelgado.com/" rel="external nofollow" class="url">Ernest</a></strong> on <a href="http://codeutopia.net/blog/2009/08/21/using-canvas-to-do-bitmap-sprite-animation-in-javascript/#comment-41278" title="">Aug 23, 2009</a> </p>
	</li>
		
		
			
<li class="mycomment" id="comment-41289">

		        <p>Ernest, otherwise yes, but I’m an Opera user and it doesn’t really work in Opera <img src="./canvas-sprite-examples_files/icon_wink.gif" alt=";)" class="wp-smiley"> </p>
<p>Also, all things considered, it has a drawback: You cannot stop the animation, or control it more precisely. You can have full control over when the frame is changed etc. with the approach I’ve shown here.</p>
        <p style="margin-bottom:5px;">By <strong><a href="http://codeutopia.net/" rel="external nofollow" class="url">Jani Hartikainen</a></strong> on <a href="http://codeutopia.net/blog/2009/08/21/using-canvas-to-do-bitmap-sprite-animation-in-javascript/#comment-41289" title="">Aug 23, 2009</a> </p>
	</li>
		
		
					
<li class="odd" id="comment-63553">

		        <p>How can I save image from canvas to file?</p>
        <p style="margin-bottom:5px;">By <strong><a href="http://galanov.net/" rel="external nofollow" class="url">Gairon</a></strong> on <a href="http://codeutopia.net/blog/2009/08/21/using-canvas-to-do-bitmap-sprite-animation-in-javascript/#comment-63553" title="">Sep 21, 2010</a> </p>
	</li>
		
		
			
<li class="odd" id="comment-66635">

		        <p>Hi,</p>
<p>This is such a good tutorial.<br>
I confess your coding style is a little complex for my tastes but I love what you’ve done. So much so that I’ve moved away from DIVs and IMAGES forever !</p>
<p>BUT.. my first attempts at drawImage() have produced unexpected results. The scale is all wrong !</p>
<p>Can you help ?</p>
<p>The code is here: <a href="http://www.wilfscorner.co.uk/sandpit/1/" rel="nofollow">http://www.wilfscorner.co.uk/sandpit/1/</a></p>
        <p style="margin-bottom:5px;">By <strong><a href="http://www.wilfscorner.co.uk/" rel="external nofollow" class="url">Wilf</a></strong> on <a href="http://codeutopia.net/blog/2009/08/21/using-canvas-to-do-bitmap-sprite-animation-in-javascript/#comment-66635" title="">Oct 15, 2010</a> </p>
	</li>
		
		
			
<li class="mycomment" id="comment-67122">

		        <p>Wilf, the reason it’s appearing distorted is because you only define the CSS-width/height for the canvas. You need to also define width and height on the element itself, because that defines the resolution of the canvas (or something like that anyway)</p>
<p>This should fix it:</p>

<div class="wp_syntax"><div class="code"><pre class="html" style="font-family:monospace;">&lt;canvas width="480" height="480"&gt;&lt;/canvas&gt;</pre></div></div>

<p>(Defining gl.canvas.width and …height should also work)</p>
        <p style="margin-bottom:5px;">By <strong><a href="http://codeutopia.net/" rel="external nofollow" class="url">Jani Hartikainen</a></strong> on <a href="http://codeutopia.net/blog/2009/08/21/using-canvas-to-do-bitmap-sprite-animation-in-javascript/#comment-67122" title="">Oct 18, 2010</a> </p>
	</li>
		
		
			
<li class="odd" id="comment-67131">

		        <p>Jani, thanks so much.<br>
I have this working nice just now.<br>
Am looking to rotate individual images (as if they were sprites) on the canvas.<br>
The only methods I have found just now appear to rotate the canvas context rather than the images displayed on the canvas.<br>
Do you know of a way to rotate images independently of one another on the canvas ?<br>
Once again many thanks.<br>
Wilf</p>
        <p style="margin-bottom:5px;">By <strong><a href="http://www.wilfscorner.co.uk/" rel="external nofollow" class="url">Wilf</a></strong> on <a href="http://codeutopia.net/blog/2009/08/21/using-canvas-to-do-bitmap-sprite-animation-in-javascript/#comment-67131" title="">Oct 18, 2010</a> </p>
	</li>
		
		
			
<li class="mycomment" id="comment-67169">

		        <p>save(), rotate(), draw(), restore() – should do the trick <img src="./canvas-sprite-examples_files/icon_smile.gif" alt=":)" class="wp-smiley">  (do this for each thing you draw)</p>
        <p style="margin-bottom:5px;">By <strong><a href="http://codeutopia.net/" rel="external nofollow" class="url">Jani Hartikainen</a></strong> on <a href="http://codeutopia.net/blog/2009/08/21/using-canvas-to-do-bitmap-sprite-animation-in-javascript/#comment-67169" title="">Oct 18, 2010</a> </p>
	</li>
		
		
			
<li class="odd" id="comment-83087">

		        <p>Great example, though preserve game logic and animation quality at very low frame rates by never ‘throwing away time’. Helps to have your game still playable / consistent on e.g. mobile browsers:</p>
<p>Change to while() and += in the animation code, the entire elapsed time will run through animation frames even if more than one change occurs:</p>
<pre>        //When the display duration has passed
        while(this._frameDuration &lt;= 0) {
...

            //Change duration to duration of new frame
            this._frameDuration += this._frames[this._frameIndex].time;
        }</pre>
        <p style="margin-bottom:5px;">By <strong><a href="http://beautifulpixels.blogspot.com/" rel="external nofollow" class="url">Vincent Scheib</a></strong> on <a href="http://codeutopia.net/blog/2009/08/21/using-canvas-to-do-bitmap-sprite-animation-in-javascript/#comment-83087" title="">Jan 28, 2011</a> </p>
	</li>
		
		
			
<li class="odd" id="comment-91898">

		        <p>Hey. Great post. It has helped me a lot in finding my bearings for building a canvas game. do you have any thoughts (or maybe a post? <img src="./canvas-sprite-examples_files/icon_smile.gif" alt=":)" class="wp-smiley">  ) on having a background and sliding it across to simulate movement?</p>
        <p style="margin-bottom:5px;">By <strong>Jeff</strong> on <a href="http://codeutopia.net/blog/2009/08/21/using-canvas-to-do-bitmap-sprite-animation-in-javascript/#comment-91898" title="">Mar 5, 2011</a> </p>
	</li>
		
		
		
	</ol>
	
	

	<ol class="tblist">

	<li style="background:transparent;padding-left:0;"><h2 id="trackbacks">2 Trackback(s)</h2></li>
	

	<li id="comment-49128">
		Dec 16, 2009: <a href="http://codeutopia.net/blog/2009/12/16/rewriting-tankwar-assessing-the-damage/" rel="external nofollow" class="url">Rewriting TankWar: Assessing the damage | CodeUtopia - The blog of Jani Hartikainen</a>			</li>
	
		

	<li id="comment-53166">
		Feb 13, 2010: <a href="http://evanwilliamsconsulting.com/blogs/blog/2010/02/13/rewriting-tankwar-assessing-the-damage/" rel="external nofollow" class="url">Rewriting TankWar: Assessing the damage « Evanwilliamsconsulting.com Blogs</a>			</li>
	
		

	</ol>

	

	
	
	<form action="http://codeutopia.net/blog/wp-comments-post.php" method="post" id="commentform">

	<h3 id="respond">Post a Comment</h3>

		
	
		<p><label for="author">Name</label>
		<input type="text" name="author" id="author" value="" size="22" tabindex="1"></p>
				
		<p><label for="email">E-mail (only used to notify you of replies to this comment-thread)</label>
		<input type="text" name="email" id="email" value="" tabindex="2" size="22"></p>		
		
		<p><label for="url">Website</label>
		<input type="text" name="url" id="url" value="" size="22" tabindex="3"></p>
	
	
		<p><textarea name="comment" id="comment" cols="5" rows="10" tabindex="4"></textarea></p>
                <p>You can use some HTML (a, em, strong, etc.). If you want to post code, use &lt;pre lang="PHP"&gt;code here&lt;/pre&gt; (you can replace PHP with the language you are posting)</p>

		<p><input name="submit" type="submit" id="submit" tabindex="5" value="Submit Comment">
		<input type="hidden" name="comment_post_ID" value="251"></p>
	
	

	<p style="clear: both;" class="subscribe-to-comments">
	<input type="checkbox" name="subscribe" id="subscribe" value="subscribe" style="width: auto;">
	<label for="subscribe">Notify me of followup comments via e-mail</label>
	</p>



	</form>


</div>	</div>

	
	</div>
<div id="sidebar">
<div class="rsidebar">
<ul>
<li>This is the blog of Jani Hartikainen. No, not the finnish soccer player, but a web-developer. You 
can read more about me on the about page.

<p>Like the blog?</p>
<p><strong><a href="http://codeutopia.net/blog/feed/" title="Subscribe (RSS)"><img style="vertical-align: middle" src="./canvas-sprite-examples_files/feed-icon16x16.png" alt="RSS feed" border="0"> Subscribe to the RSS feed</a></strong></p>

</li>
</ul>
</div>

<div class="rsidebar">
<ul>
<li>
				<h2>Search the blog</h2>
<form method="get" id="searchform" action="http://codeutopia.net/blog/">
<div><input type="text" value="" name="s" id="s"><input type="submit" id="searchsubmit" value="Search">
</div>
</form>			</li>
			<li id="recent-posts-2" class="widget widget_recent_entries">		<h2 class="widgettitle">Recent posts</h2>
		<ul>
				<li><a href="http://codeutopia.net/blog/2011/08/20/adventures-in-haskell-dynamic-loading-and-compiling-of-modules/" title="Adventures in Haskell: Dynamic loading and compiling of modules">Adventures in Haskell: Dynamic loading and compiling of modules</a></li>
				<li><a href="http://codeutopia.net/blog/2011/08/02/doctrine-2-and-the-law-of-demeter/" title="Doctrine 2 and the law of demeter">Doctrine 2 and the law of demeter</a></li>
				<li><a href="http://codeutopia.net/blog/2011/07/13/php-typehinting-gotcha-in-exceptionsmethods/" title="PHP typehinting gotcha in exceptions/methods">PHP typehinting gotcha in exceptions/methods</a></li>
				<li><a href="http://codeutopia.net/blog/2011/07/08/why-did-nobody-ever-tell-me-about-ssh_config/" title="Why did nobody ever tell me about ssh_config?">Why did nobody ever tell me about ssh_config?</a></li>
				<li><a href="http://codeutopia.net/blog/2011/06/30/how-to-automatically-run-unit-tests-from-a-git-push/" title="How to automatically run unit tests from a git push">How to automatically run unit tests from a git push</a></li>
				</ul>
		</li>
<li id="categories-1" class="widget widget_categories"><h2 class="widgettitle">Categories</h2>
		<ul>
	<li class="cat-item cat-item-3"><a href="http://codeutopia.net/blog/category/general/" title="Topics not fitting in other categories">general</a>
</li>
	<li class="cat-item cat-item-5"><a href="http://codeutopia.net/blog/category/programming/" title="Topics related to programming. ">Programming</a>
</li>
	<li class="cat-item cat-item-1"><a href="http://codeutopia.net/blog/category/uncategorized/" title="View all posts filed under Uncategorized">Uncategorized</a>
</li>
	<li class="cat-item cat-item-6"><a href="http://codeutopia.net/blog/category/web/" title="Web-related topics such as opinions and ideas related to browsers, web 2.0 apps etc.">Web</a>
</li>
		</ul>
</li>
<li id="recent-comments-2" class="widget widget_recent_comments"><h2 class="widgettitle">Recent Comments</h2>
<ul id="recentcomments"><li class="recentcomments"><a href="http://codeutopia.net/" rel="external nofollow" class="url">Jani Hartikainen</a> on <a href="http://codeutopia.net/blog/2011/02/19/using-spatial-data-in-doctrine-2/comment-page-1/#comment-126659">Using spatial data in Doctrine 2</a></li><li class="recentcomments">Kimmo on <a href="http://codeutopia.net/blog/2011/02/19/using-spatial-data-in-doctrine-2/comment-page-1/#comment-126654">Using spatial data in Doctrine 2</a></li><li class="recentcomments"><a href="http://codepoets.co.uk/" rel="external nofollow" class="url">David Goodwin</a> on <a href="http://codeutopia.net/blog/2011/07/08/why-did-nobody-ever-tell-me-about-ssh_config/comment-page-1/#comment-126573">Why did nobody ever tell me about ssh_config?</a></li><li class="recentcomments"><a href="http://codeutopia.net/" rel="external nofollow" class="url">Jani Hartikainen</a> on <a href="http://codeutopia.net/blog/2008/06/02/autogenerating-forms-from-doctrine-models/comment-page-1/#comment-126019">Autogenerating forms from Doctrine models</a></li><li class="recentcomments"><a href="http://adminsgoodies.com/how-do-i-protect-large-file-downloads-through-php-andor-apache/" rel="external nofollow" class="url">How do I protect large file downloads through PHP and/or Apache? - Admins Goodies</a> on <a href="http://codeutopia.net/blog/2009/03/06/sending-files-better-apache-mod_xsendfile-and-php/comment-page-1/#comment-125998">Sending files better: Apache mod_xsendfile and PHP</a></li></ul></li>
<li id="tag_cloud-2" class="widget widget_tag_cloud"><h2 class="widgettitle">Topics</h2>
<div><a href="http://codeutopia.net/blog/tag/46/" class="tag-link-46" title="1 topic" style="font-size: 8pt;"></a>
<a href="http://codeutopia.net/blog/tag/ajax/" class="tag-link-17" title="5 topics" style="font-size: 12.2pt;">Ajax</a>
<a href="http://codeutopia.net/blog/tag/apache/" class="tag-link-45" title="1 topic" style="font-size: 8pt;">Apache</a>
<a href="http://codeutopia.net/blog/tag/aspnet/" class="tag-link-24" title="2 topics" style="font-size: 9.575pt;">ASP.NET</a>
<a href="http://codeutopia.net/blog/tag/blogs/" class="tag-link-37" title="5 topics" style="font-size: 12.2pt;">Blogs</a>
<a href="http://codeutopia.net/blog/tag/books/" class="tag-link-44" title="5 topics" style="font-size: 12.2pt;">Books</a>
<a href="http://codeutopia.net/blog/tag/c/" class="tag-link-19" title="1 topic" style="font-size: 8pt;">C#</a>
<a href="http://codeutopia.net/blog/tag/canvas/" class="tag-link-51" title="3 topics" style="font-size: 10.625pt;">canvas</a>
<a href="http://codeutopia.net/blog/tag/databases/" class="tag-link-15" title="6 topics" style="font-size: 12.8125pt;">Databases</a>
<a href="http://codeutopia.net/blog/tag/design-patterns/" class="tag-link-13" title="10 topics" style="font-size: 14.475pt;">Design Patterns</a>
<a href="http://codeutopia.net/blog/tag/django/" class="tag-link-22" title="5 topics" style="font-size: 12.2pt;">Django</a>
<a href="http://codeutopia.net/blog/tag/doctrine/" class="tag-link-23" title="9 topics" style="font-size: 14.125pt;">Doctrine</a>
<a href="http://codeutopia.net/blog/tag/doctrine2/" class="tag-link-63" title="2 topics" style="font-size: 9.575pt;">Doctrine2</a>
<a href="http://codeutopia.net/blog/tag/dojo/" class="tag-link-60" title="4 topics" style="font-size: 11.5pt;">Dojo</a>
<a href="http://codeutopia.net/blog/tag/error-challenge/" class="tag-link-52" title="3 topics" style="font-size: 10.625pt;">error-challenge</a>
<a href="http://codeutopia.net/blog/tag/games/" class="tag-link-56" title="14 topics" style="font-size: 15.7pt;">Games</a>
<a href="http://codeutopia.net/blog/tag/general/" class="tag-link-3" title="24 topics" style="font-size: 17.625pt;">general</a>
<a href="http://codeutopia.net/blog/tag/git/" class="tag-link-53" title="5 topics" style="font-size: 12.2pt;">Git</a>
<a href="http://codeutopia.net/blog/tag/hardware/" class="tag-link-42" title="4 topics" style="font-size: 11.5pt;">Hardware</a>
<a href="http://codeutopia.net/blog/tag/haskell/" class="tag-link-43" title="2 topics" style="font-size: 9.575pt;">Haskell</a>
<a href="http://codeutopia.net/blog/tag/java/" class="tag-link-28" title="2 topics" style="font-size: 9.575pt;">Java</a>
<a href="http://codeutopia.net/blog/tag/javascript/" class="tag-link-8" title="45 topics" style="font-size: 19.9pt;">JavaScript</a>
<a href="http://codeutopia.net/blog/tag/opera/" class="tag-link-9" title="14 topics" style="font-size: 15.7pt;">Opera</a>
<a href="http://codeutopia.net/blog/tag/performance/" class="tag-link-20" title="5 topics" style="font-size: 12.2pt;">Performance</a>
<a href="http://codeutopia.net/blog/tag/php/" class="tag-link-4" title="79 topics" style="font-size: 22pt;">PHP</a>
<a href="http://codeutopia.net/blog/tag/programming/" class="tag-link-5" title="26 topics" style="font-size: 17.8875pt;">Programming</a>
<a href="http://codeutopia.net/blog/tag/python/" class="tag-link-21" title="2 topics" style="font-size: 9.575pt;">Python</a>
<a href="http://codeutopia.net/blog/tag/refactoring/" class="tag-link-50" title="3 topics" style="font-size: 10.625pt;">Refactoring</a>
<a href="http://codeutopia.net/blog/tag/review/" class="tag-link-59" title="3 topics" style="font-size: 10.625pt;">Review</a>
<a href="http://codeutopia.net/blog/tag/re_pdf/" class="tag-link-48" title="1 topic" style="font-size: 8pt;">RE_Pdf</a>
<a href="http://codeutopia.net/blog/tag/security/" class="tag-link-10" title="5 topics" style="font-size: 12.2pt;">Security</a>
<a href="http://codeutopia.net/blog/tag/software-designarchitecture/" class="tag-link-26" title="13 topics" style="font-size: 15.4375pt;">Software design/architecture</a>
<a href="http://codeutopia.net/blog/tag/source-code/" class="tag-link-12" title="4 topics" style="font-size: 11.5pt;">source code</a>
<a href="http://codeutopia.net/blog/tag/svn/" class="tag-link-54" title="1 topic" style="font-size: 8pt;">Svn</a>
<a href="http://codeutopia.net/blog/tag/testing/" class="tag-link-25" title="13 topics" style="font-size: 15.4375pt;">Testing</a>
<a href="http://codeutopia.net/blog/tag/tools/" class="tag-link-14" title="24 topics" style="font-size: 17.625pt;">Tools</a>
<a href="http://codeutopia.net/blog/tag/user-interfaces/" class="tag-link-18" title="10 topics" style="font-size: 14.475pt;">User Interfaces</a>
<a href="http://codeutopia.net/blog/tag/web/" class="tag-link-6" title="25 topics" style="font-size: 17.7125pt;">Web</a>
<a href="http://codeutopia.net/blog/tag/web-applications/" class="tag-link-11" title="8 topics" style="font-size: 13.6875pt;">Web Applications</a>
<a href="http://codeutopia.net/blog/tag/widgets/" class="tag-link-16" title="7 topics" style="font-size: 13.25pt;">Widgets</a>
<a href="http://codeutopia.net/blog/tag/zend-framework/" class="tag-link-7" title="48 topics" style="font-size: 20.1625pt;">Zend Framework</a>
<a href="http://codeutopia.net/blog/tag/zend_acl/" class="tag-link-41" title="3 topics" style="font-size: 10.625pt;">Zend_Acl</a>
<a href="http://codeutopia.net/blog/tag/zend_form/" class="tag-link-38" title="4 topics" style="font-size: 11.5pt;">Zend_Form</a>
<a href="http://codeutopia.net/blog/tag/zend_pdf/" class="tag-link-47" title="2 topics" style="font-size: 9.575pt;">Zend_Pdf</a>
<a href="http://codeutopia.net/blog/tag/zend_validate/" class="tag-link-49" title="1 topic" style="font-size: 8pt;">Zend_Validate</a></div>
</li>
<li id="archives-2" class="widget widget_archive"><h2 class="widgettitle">Archives</h2>
		<ul>
			<li><a href="http://codeutopia.net/blog/2011/08/" title="August 2011">August 2011</a></li>
	<li><a href="http://codeutopia.net/blog/2011/07/" title="July 2011">July 2011</a></li>
	<li><a href="http://codeutopia.net/blog/2011/06/" title="June 2011">June 2011</a></li>
	<li><a href="http://codeutopia.net/blog/2011/05/" title="May 2011">May 2011</a></li>
	<li><a href="http://codeutopia.net/blog/2011/04/" title="April 2011">April 2011</a></li>
	<li><a href="http://codeutopia.net/blog/2011/03/" title="March 2011">March 2011</a></li>
	<li><a href="http://codeutopia.net/blog/2011/02/" title="February 2011">February 2011</a></li>
	<li><a href="http://codeutopia.net/blog/2011/01/" title="January 2011">January 2011</a></li>
	<li><a href="http://codeutopia.net/blog/2010/12/" title="December 2010">December 2010</a></li>
	<li><a href="http://codeutopia.net/blog/2010/11/" title="November 2010">November 2010</a></li>
	<li><a href="http://codeutopia.net/blog/2010/10/" title="October 2010">October 2010</a></li>
	<li><a href="http://codeutopia.net/blog/2010/09/" title="September 2010">September 2010</a></li>
	<li><a href="http://codeutopia.net/blog/2010/08/" title="August 2010">August 2010</a></li>
	<li><a href="http://codeutopia.net/blog/2010/07/" title="July 2010">July 2010</a></li>
	<li><a href="http://codeutopia.net/blog/2010/06/" title="June 2010">June 2010</a></li>
	<li><a href="http://codeutopia.net/blog/2010/05/" title="May 2010">May 2010</a></li>
	<li><a href="http://codeutopia.net/blog/2010/04/" title="April 2010">April 2010</a></li>
	<li><a href="http://codeutopia.net/blog/2010/03/" title="March 2010">March 2010</a></li>
	<li><a href="http://codeutopia.net/blog/2010/02/" title="February 2010">February 2010</a></li>
	<li><a href="http://codeutopia.net/blog/2010/01/" title="January 2010">January 2010</a></li>
	<li><a href="http://codeutopia.net/blog/2009/12/" title="December 2009">December 2009</a></li>
	<li><a href="http://codeutopia.net/blog/2009/11/" title="November 2009">November 2009</a></li>
	<li><a href="http://codeutopia.net/blog/2009/10/" title="October 2009">October 2009</a></li>
	<li><a href="http://codeutopia.net/blog/2009/09/" title="September 2009">September 2009</a></li>
	<li><a href="http://codeutopia.net/blog/2009/08/" title="August 2009">August 2009</a></li>
	<li><a href="http://codeutopia.net/blog/2009/07/" title="July 2009">July 2009</a></li>
	<li><a href="http://codeutopia.net/blog/2009/06/" title="June 2009">June 2009</a></li>
	<li><a href="http://codeutopia.net/blog/2009/05/" title="May 2009">May 2009</a></li>
	<li><a href="http://codeutopia.net/blog/2009/04/" title="April 2009">April 2009</a></li>
	<li><a href="http://codeutopia.net/blog/2009/03/" title="March 2009">March 2009</a></li>
	<li><a href="http://codeutopia.net/blog/2009/02/" title="February 2009">February 2009</a></li>
	<li><a href="http://codeutopia.net/blog/2009/01/" title="January 2009">January 2009</a></li>
	<li><a href="http://codeutopia.net/blog/2008/12/" title="December 2008">December 2008</a></li>
	<li><a href="http://codeutopia.net/blog/2008/11/" title="November 2008">November 2008</a></li>
	<li><a href="http://codeutopia.net/blog/2008/10/" title="October 2008">October 2008</a></li>
	<li><a href="http://codeutopia.net/blog/2008/09/" title="September 2008">September 2008</a></li>
	<li><a href="http://codeutopia.net/blog/2008/08/" title="August 2008">August 2008</a></li>
	<li><a href="http://codeutopia.net/blog/2008/07/" title="July 2008">July 2008</a></li>
	<li><a href="http://codeutopia.net/blog/2008/06/" title="June 2008">June 2008</a></li>
	<li><a href="http://codeutopia.net/blog/2008/05/" title="May 2008">May 2008</a></li>
	<li><a href="http://codeutopia.net/blog/2008/04/" title="April 2008">April 2008</a></li>
	<li><a href="http://codeutopia.net/blog/2008/03/" title="March 2008">March 2008</a></li>
	<li><a href="http://codeutopia.net/blog/2008/02/" title="February 2008">February 2008</a></li>
	<li><a href="http://codeutopia.net/blog/2008/01/" title="January 2008">January 2008</a></li>
	<li><a href="http://codeutopia.net/blog/2007/12/" title="December 2007">December 2007</a></li>
	<li><a href="http://codeutopia.net/blog/2007/11/" title="November 2007">November 2007</a></li>
	<li><a href="http://codeutopia.net/blog/2007/10/" title="October 2007">October 2007</a></li>
	<li><a href="http://codeutopia.net/blog/2007/09/" title="September 2007">September 2007</a></li>
		</ul>
</li>
<li id="linkcat-2" class="widget widget_links"><h2 class="widgettitle">About me</h2>

	<ul class="xoxo blogroll">
<li><a href="http://zeeohemgee.blogspot.com/" rel="me" title="My first blog">My first blog</a></li>
<li><a href="http://last.fm/user/Zomg" rel="me" title="My last.fm profile">My Last.fm Profile</a></li>
<li><a href="http://www.linkedin.com/in/janihartikainen">My LinkedIn</a></li>
<li><a href="http://my.opera.com/zomg/blog" rel="me" title="My previous blog">My previous blog</a></li>
<li><a href="http://twitter.com/jhartikainen" rel="me">My Twitter</a></li>

	</ul>
</li>


		</ul>
</div>
<div class="rsidebar">
<ul>
<li><h3>Related posts</h3><ul class="related_post"><li>July 14, 2009 -- <a href="http://codeutopia.net/blog/2009/07/14/opera-command-javascript-based-missile-command-game/" title="Opera Command, JavaScript based Missile Command game">Opera Command, JavaScript based Missile Command game (4)</a></li><li>January 7, 2010 -- <a href="http://codeutopia.net/blog/2010/01/07/rendering-graphics-in-javascript-games/" title="Rendering graphics in JavaScript games">Rendering graphics in JavaScript games (4)</a></li><li>December 16, 2009 -- <a href="http://codeutopia.net/blog/2009/12/16/rewriting-tankwar-assessing-the-damage/" title="Rewriting TankWar: Assessing the damage">Rewriting TankWar: Assessing the damage (3)</a></li><li>December 2, 2009 -- <a href="http://codeutopia.net/blog/2009/12/02/tankwar-has-online-mode-again-this-time-on-opera-unite/" title="TankWar has online mode again: This time on Opera Unite">TankWar has online mode again: This time on Opera Unite (5)</a></li></ul> </li>
</ul>
</div>
		
</div>



</div>
<div id="footer"></div>
<div id="footerbox">
<div class="footer">Powered by <a href="http://wordpress.org/">WordPress</a> <a href="http://codeutopia.net/blog/feed/">Entries (RSS)</a> and <a href="http://codeutopia.net/blog/comments/feed/">Comments (RSS)</a>. Theme by <a href="http://www.blogohblog.com/">Bob</a>, modified by Jani	
  <!-- 51 queries. 0.399 seconds. --></div></div>
<script src="./canvas-sprite-examples_files/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-394641-3";
urchinTracker();
</script>


<!-- Dynamic page generated in 0.385 seconds. -->
<!-- Cached page generated by WP-Super-Cache on 2011-08-27 13:48:37 -->
<!-- super cache --></body></html>